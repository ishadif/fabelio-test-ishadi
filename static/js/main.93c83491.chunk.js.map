{"version":3,"sources":["providers/Product.js","components/Filter.js","components/Header.js","components/Card.js","components/Products.js","App.js","serviceWorker.js","index.js"],"names":["ProductContext","React","createContext","Product","props","useState","products","setProducts","value","text","deliveryTimes","styleFilters","setStyleFilters","timeFilters","setTimeFilters","productStyles","setProductStyles","productSearch","setProductSearch","useEffect","fetch","then","data","json","furnitureStyles","furniture_styles","reduce","accumulator","current","toLowerCase","Provider","handleFiltersChange","type","handleProductSearch","children","Filter","filters","placeholder","search","setSearch","selectedFilters","setSelectedFilters","inputFocus","setInputFocus","resultsHeight","setResultsHeight","resultsEl","useRef","wrapperEl","handleClickOutside","e","contains","target","document","addEventListener","removeEventListener","getBoundingClientRect","height","filtered","filter","style","toString","includes","className","ref","onChange","onFocus","map","i","key","name","defaultChecked","htmlFor","data-checked","onClick","editedFilters","filteredIndex","findIndex","splice","push","toggleSelect","Header","useContext","searchProduct","setSearchProduct","Card","product","formattedPrice","Intl","NumberFormat","currency","format","price","description","slice","furniture_style","delivery_time","Products","filteredProducts","filterByStyle","filterByDeliveryTime","time","filterByName","length","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93c83491.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nexport const ProductContext = React.createContext(null);\n\nfunction Product(props) {\n    const [products, setProducts] = useState([])\n    const [deliveryTimes] = useState([\n        {value: 7,text: '1 week'},\n        {value: 14,text: '2 weeks'},\n        {value: 30,text: '1 month'},\n        {value: '>',text: '& more'}\n    ])\n    const [styleFilters, setStyleFilters] = useState([])\n    const [timeFilters, setTimeFilters] = useState([])\n    const [productStyles, setProductStyles] = useState([])\n    const [productSearch, setProductSearch] = useState([])\n\n    useEffect(() => {\n        fetch('http://www.mocky.io/v2/5c9105cb330000112b649af8')\n            .then(data => data.json())\n            .then(data => {\n                setProducts(data.products);\n                const furnitureStyles = data.furniture_styles.reduce((accumulator, current) => {\n                    return accumulator = [...accumulator, {value: current.toLowerCase(), text: current}]\n                }, [])\n                \n                setProductStyles(furnitureStyles)\n            })\n    },[])\n\n    function handleFiltersChange(data) {\n        if (data.type === 'style') {\n            setStyleFilters(data.data)\n        } else {\n            setTimeFilters(data.data)\n        }\n    }\n\n    return (\n        <ProductContext.Provider value={{\n            products,\n            productStyles,\n            deliveryTimes,\n            styleFilters,\n            timeFilters,\n            handleFiltersChange,\n            productSearch,\n            handleProductSearch: (value) => setProductSearch(value)\n        }}>\n            {props.children}\n        </ProductContext.Provider>\n    )\n}\n\nexport default Product;\n","import React, {useState, useEffect, useRef} from 'react';\n\nimport './filter.css';\n\nfunction Filter({filters, handleFiltersChange, placeholder}) {\n    const [search, setSearch] = useState('')\n    const [selectedFilters, setSelectedFilters] = useState([])\n    const [inputFocus, setInputFocus] = useState(false)\n    const [resultsHeight, setResultsHeight] = useState(0)\n    const resultsEl = useRef(null);\n    const wrapperEl = useRef(null);\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside)\n        \n        return () => {\n            document.removeEventListener('click', handleClickOutside)\n        }\n    }, [])\n\n    /* eslint-disable */\n    useEffect(() => {\n        handleFiltersChange(selectedFilters)\n    }, [selectedFilters])\n\n    useEffect(() => {\n        if (inputFocus) {\n            setResultsHeight(resultsEl.current.getBoundingClientRect().height)\n        } else {\n            setResultsHeight(0)\n        }\n    }, [inputFocus, search]);\n\n    function handleClickOutside(e) {\n        if (wrapperEl.current && !wrapperEl.current.contains(e.target)) {\n            setInputFocus(false)\n        }\n    }\n\n    function toggleSelect(value) {\n        let editedFilters = [...selectedFilters];\n\n        if (!selectedFilters.includes(value)) {\n            editedFilters.push(value)\n        } else {\n            const filteredIndex = selectedFilters.findIndex(filter => filter === value);\n\n            editedFilters.splice(filteredIndex, 1)\n        }\n\n        setSelectedFilters(editedFilters)\n    }\n\n    const filtered = \n            inputFocus ? \n                search ? filters.filter(style => style.text.toString().toLowerCase().includes(search.toLowerCase())) \n                : filters \n            : []\n\n    return (\n        <div \n            className=\"checkbox-container\"\n            ref={wrapperEl}\n        >\n            <input \n                placeholder={placeholder}\n                className=\"checkbox-input\"\n                onChange={({target: {value}}) => setSearch(value)}\n                onFocus={() => setInputFocus(true)}\n            />\n            <ul\n                ref={resultsEl}\n                className=\"results\"\n                style={{\"--height\": resultsHeight}}\n            >\n                {\n                    filtered.map((filter, i) => (\n                        <li \n                            key={filter.value} \n                            className=\"result\" \n                            style={{\"--i\": i}}\n                        >\n                            <input\n                                type=\"checkbox\" \n                                name={filter.value} \n                                value={filter.value}\n                                defaultChecked={selectedFilters.includes(filter.value)}\n                            />\n                            <div className=\"checkbox\">\n                                <label htmlFor=\"furniture-styles\">\n                                    {filter.text}\n                                </label>\n                                <div \n                                    className=\"checkbox-option\" \n                                    data-checked={selectedFilters.includes(filter.value)}\n                                    onClick={() => toggleSelect(filter.value)}\n                                />\n                            </div>\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Filter;","import React, {useContext, useState, useEffect} from 'react'\n\nimport './header.css'\nimport {ProductContext} from '../providers/Product'\nimport Filter from './Filter'\n\nfunction Header() {\n    const {productStyles, deliveryTimes, handleFiltersChange, handleProductSearch} = useContext(ProductContext)\n    const [searchProduct, setSearchProduct] = useState('')\n\n    useEffect(() => {\n        handleProductSearch(searchProduct)\n    },[handleProductSearch, searchProduct])\n\n    return (\n        <header className=\"header\">\n            <div className=\"inner\">\n                <div className=\"header-row\">\n                    <input \n                        type=\"text\" \n                        className=\"search-input\" \n                        placeholder=\"search furniture\"\n                        value={searchProduct}\n                        onChange={({target: {value}}) => setSearchProduct(value)}\n                    />\n                </div>\n                <div className=\"header-row\">\n                    <div className=\"header-col\">\n                        <Filter\n                            placeholder=\"Furniture Style\"\n                            filters={productStyles}\n                            handleFiltersChange={(data) => handleFiltersChange({type: 'style', data})}\n                        />\n                    </div>\n                    <div className=\"header-col\">\n                        <Filter \n                            placeholder=\"Delivery Time\"\n                            filters={deliveryTimes}\n                            handleFiltersChange={data => handleFiltersChange({type: 'time', data})}\n                        />\n                    </div>\n                </div>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react'\n\nimport './card.css';\n\nfunction Card({product}) {\n    const formattedPrice = new Intl.NumberFormat('id-ID', {style: 'currency', currency: 'IDR'}).format(product.price)\n    return (\n        <div className=\"card\">\n            <div className=\"card-header\">\n                <h1 className=\"product-title\">{product.name}</h1>\n                <span className=\"product-price\">{formattedPrice}</span>\n            </div>\n            <div className=\"card-content\">\n                <p className=\"product-description\">{product.description.slice(0, 113)}</p>\n                <div className=\"product-styles\">\n                    {\n                        product.furniture_style.map(style => <span>{style}</span>)\n                    }\n                </div>\n                <p className=\"product-delivery-time\">{product.delivery_time} Day</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React, {useContext} from 'react'\nimport Card from './Card'\nimport { ProductContext } from '../providers/Product';\n\nfunction Products() {\n    const {products, styleFilters, timeFilters, productSearch} = useContext(ProductContext)\n\n    let filteredProducts = []\n\n    function filterByStyle(product) {\n        return product.furniture_style.filter(style => styleFilters.includes(style.toLowerCase()))\n    }\n\n    function filterByDeliveryTime(product) {\n        return timeFilters.filter(time => {\n            if (typeof time !=='number') {\n                return product.delivery_time > 30\n            } else {\n                return product.delivery_time <= time\n            }\n        })\n    }\n\n    function filterByName(product) {\n        return product.name.toLowerCase().includes(productSearch.toLowerCase())\n    }\n\n    if (productSearch) {\n        filteredProducts = products.filter(product => filterByName(product))\n    } else if (styleFilters.length > 0 && timeFilters.length > 0) {\n        filteredProducts = products.filter(product => filterByStyle(product).length > 0 && filterByDeliveryTime(product).length > 0)\n    } else if (styleFilters.length > 0) {\n        filteredProducts = products.filter(product => filterByStyle(product).length > 0)\n    } else if (timeFilters.length > 0) {\n        filteredProducts = products.filter(product => filterByDeliveryTime(product).length > 0)\n    } else {\n        filteredProducts = products\n    }\n\n    return (\n        <div className=\"inner\">\n          <div className=\"container\">\n            {\n                filteredProducts.map(product => <Card product={product} key={product.name}/>)\n            }\n          </div>\n        </div>\n    )\n}\n\nexport default Products;","import React from 'react';\nimport './App.css';\nimport ProductProvider from './providers/Product';\nimport Header from './components/Header';\nimport Products from './components/Products';\n\nfunction App() {\n  return (\n    <ProductProvider>\n      <Header />\n      <main>\n        <Products />\n      </main>\n    </ProductProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}